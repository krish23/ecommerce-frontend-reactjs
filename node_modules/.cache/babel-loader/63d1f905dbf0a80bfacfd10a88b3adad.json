{"ast":null,"code":"import { ORDER_LIST, ORDER_ERROR } from \"./OrderTypes\";\nconst INITIAL_STATE = {\n  orders: [],\n  error: {}\n};\nconst OrderReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case ORDER_LIST:\n      return {\n        ...state,\n        orders: payload\n      };\n    case ORDER_ERROR:\n      return {\n        error: payload\n      };\n    default:\n      return state;\n  }\n};\n_c = OrderReducer;\nexport default OrderReducer;\nvar _c;\n$RefreshReg$(_c, \"OrderReducer\");","map":{"version":3,"names":["ORDER_LIST","ORDER_ERROR","INITIAL_STATE","orders","error","OrderReducer","state","action","type","payload"],"sources":["/home/ubuntu/ecommerce-frontend/src/redux/Order/OrderReducer.js"],"sourcesContent":["import { ORDER_LIST, ORDER_ERROR } from \"./OrderTypes\";\n\nconst INITIAL_STATE = {\n  orders: [],\n  error: {},\n};\n\nconst OrderReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case ORDER_LIST:\n      return {\n        ...state,\n        orders: payload,\n      };\n\n    case ORDER_ERROR:\n      return {\n        error: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default OrderReducer;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,QAAQ,cAAc;AAEtD,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAGJ,aAAa;EAAA,IAAEK,MAAM;EACjD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKR,UAAU;MACb,OAAO;QACL,GAAGM,KAAK;QACRH,MAAM,EAAEM;MACV,CAAC;IAEH,KAAKR,WAAW;MACd,OAAO;QACLG,KAAK,EAAEK;MACT,CAAC;IAEH;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAAC,KAlBID,YAAY;AAoBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}